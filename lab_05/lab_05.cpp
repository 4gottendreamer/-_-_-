// lab_05.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
// Вариант №6.
// Даны натуральное число n, действительные числа а1,..., an.
// Вычислить обратную величину произведения тех членов
// последовательности a1,..., an, для которых выполняется условие i + 1 < a_i < i!
//

#include <iostream>
#include <ctime>
#include <cmath>

using namespace std;

// Возвращает факториал числа _N
// Рекурсивный алгорим
long long factorial_recursive(long int _N)
{
    if (_N)
    {
        return _N * factorial_recursive(_N - 1);
    }
    else return 1;
}

// Возвращает факториал числа _N
// Итерационный алгорим
long long factorial(long int _N)
{
    long long fact = 1;
    for (int i = 1; i <= _N; i++)
    {
        fact *= i;
    }
    return fact;
}

int main()
{
    setlocale(LC_ALL, "Russian"); // Установка корректного вывода кириллицы
    srand(time(NULL)); // Установка генератора случайных чисел

    int N;
    double* a;

    cout << "Введите N: ";
    cin >> N;
    
    cout.precision(8);
    
    a = new double[N];
    for (int i = 0; i < N; i++)
    {
        a[i] = rand() % 100 / (i % rand()? i % rand() : i + 1 );
        //a[i] = rand() % (int)((pow(-1., i) + i) ? (pow(-1., i) + i) : 10);
        cout << i + 1 << '\t' << a[i] << endl;
    }

    cout << endl << "i + 1 < a_i < i!" << endl;

    for (int i = 0; i < N; i++)
    {
        if (i + 1 < a[i] and a[i] < factorial_recursive(i))
        {
            cout << i + 1 << "\t< " << 1./a[i] << "\t< " << factorial_recursive(i) << endl;
            //cout << i + 1 << "\t< " << 1. / a[i] << "\t< " << factorial_recursive(i) << endl;
        }
    }
    
    // Игнорирование символа '\n' в потоке ввода
    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    cin.get(); // Ожидание нажатия Enter
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
